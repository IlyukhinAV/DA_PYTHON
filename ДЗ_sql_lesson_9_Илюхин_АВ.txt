--task1  (lesson9)
-- oracle: https://www.hackerrank.com/challenges/the-report/problem
           
select
case
when grades.grade >= 8 then students.name
when grades.grade < 8 then NULL
end AS name, grades.grade, students.marks
from students
left join grades
on students.marks >= min_mark and students.marks <= max_mark
order by grades.grade DESC, students.name ASC, students.marks ASC;

--task2  (lesson9)
-- oracle: https://www.hackerrank.com/challenges/occupations/problem

select doctor_name, professor_name, singer_name, actor_name from (select name doctor_name, row_number() over(order by name) rn from occupations where occupation = 'Doctor') d full outer join  (select name professor_name, row_number() over(order by name) rn from occupations where occupation = 'Professor') p on d.rn = p.rn full outer join  (select name singer_name, row_number() over(order by name) rn from occupations where occupation = 'Singer') s on p.rn = s.rn full outer join  (select name actor_name, row_number() over(order by name) rn from occupations where occupation = 'Actor') a on s.rn = a.rn;


--task3  (lesson9)
-- oracle: https://www.hackerrank.com/challenges/weather-observation-station-9/problem
select distinct city from station where substr(city,1,1) not in ('A', 'E', 'I', 'O','U')

--task4  (lesson9)
-- oracle: https://www.hackerrank.com/challenges/weather-observation-station-10/problem
select distinct city from station where substr(city,length(city),1) not in ('a', 'e', 'i', 'o','u');


--task5  (lesson9)
-- oracle: https://www.hackerrank.com/challenges/weather-observation-station-11/problem
select distinct city from station where substr(city,1,1) not in ('A', 'E', 'I', 'O','U') or substr(city,length(city),1) not in ('a', 'e', 'i', 'o','u'); 


--task6  (lesson9)
-- oracle: https://www.hackerrank.com/challenges/weather-observation-station-12/problem
select distinct city from station where substr(city,1,1) not in ('A', 'E', 'I', 'O','U') and substr(city,length(city),1) not in ('a', 'e', 'i', 'o','u');


--task7  (lesson9)
-- oracle: https://www.hackerrank.com/challenges/salary-of-employees/problem
select name from Employee where salary > 2000 and months < 10 order by employee_id;

--task8  (lesson9)
-- oracle: https://www.hackerrank.com/challenges/the-report/problem
повтор --task1  (lesson9)